<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
globalvar isVersus;
isVersus = false;

selectedOption = optStart;

useGamePad = true;

choiceBox = instance_create(512, 389, objTitleOptionBox);

bgPosOffsetSize = 50;
bgPosOffsetStep = 1;
bgPosOffsetMoveSpeed = 15; //fps

for(var i = 0; i &lt; bgPosOffsetSize/2; i++){
    bgPosOffset[i] = i*bgPosOffsetStep;
}

for(var i = 0; i &lt; bgPosOffsetSize/2; i++){ 
    bgPosOffset[i+bgPosOffsetSize/2] = bgPosOffsetSize/2*bgPosOffsetStep - i*bgPosOffsetStep;
}

bgPosOffsetIter = 0;
bgPosBaseOffset = 0;

alarm[1] = room_speed/bgPosOffsetMoveSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_y[1] = bgPosBaseOffset + bgPosOffset[bgPosOffsetIter];

bgPosOffsetIter++;
bgPosOffsetIter = bgPosOffsetIter mod bgPosOffsetSize;

alarm[1] = room_speed/bgPosOffsetMoveSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate menu option
if(selectedOption == opt1P){
  
  isVersus = false;
  numGamePads = 1;
  audio_stop_sound(musTitleScreen);
  room_goto(rmMain);
  
} else if (selectedOption == opt2P) {
  with (objTitleOptionBox) {
    instance_destroy();
  }
  
  instance_change(objTitleControlEZMode,true);
} else if (selectedOption == optHowToPlay) {
  numGamePads = 1;
  with (objTitleOptionBox) {
    instance_destroy();
  }
  
  instance_change(objTitleControl,true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Options using gamepad

vVal = gamepad_axis_value(0, gp_axislv);
var threshold = 0.5;

if (useGamePad) {
    var threshold = 0.5;
    var vFinal = 0;
    
    vVal = gamepad_axis_value(0, gp_axislv);
    
    if (vVal &gt;= threshold)
      vFinal = 1.0;
    if (vVal &lt;= -threshold)
      vFinal = -1.0;
      
    if (vFinal &gt; 0.5) {
        if (selectedOption != optHowToPlay) {

            selectedOption += 1;
            if (selectedOption == opt1P) {
                choiceBox.y = 389;
            } else if(selectedOption == opt2P) {
                choiceBox.y = 432;
            } else if(selectedOption == optHowToPlay) {
                choiceBox.y = 561;
            }
        }
        useGamePad = false;    
    } else if (vFinal &lt; -0.5) {
        if (selectedOption != opt1P) {
            selectedOption -= 1;
            if (selectedOption == opt1P) {
                choiceBox.y = 389;
            } else if(selectedOption == opt2P) {
                choiceBox.y = 432;
            } else if(selectedOption == optHowToPlay) {
                choiceBox.y = 561;
            }
        }
        useGamePad = false;    
    }

} else {
    if (abs(vVal) &lt;= threshold){ 
        useGamePad = true;
    }
}

///Check for gamepad button

if (scrCheckController(0) == true)
{
   alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text on screen

draw_set_halign(fa_center);
draw_set_valign(fa_center);

draw_set_font(fntMenu);
draw_set_colour(c_white);

depth = 150;
draw_sprite(sprMenuTile, 0, 462, 475);
draw_text(462,389,"1 Player");
draw_text(462,432,"2 Players");
draw_text(462,475,"How to Play");
draw_text(462,518,"Options");
draw_text(462,561,"Credits");

depth = 100;
draw_sprite(sprMenuTile, 0, 512, 475);

draw_text(512,389,"Regular");
draw_text(512,432,"Easy");
draw_text(512,561,"Back");


draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select Next Option


if (selectedOption != optHowToPlay) {
    choiceBox.y += 43;
    selectedOption += 1;
}

if (selectedOption == optHowToPlay) {
    choiceBox.y = 561;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select Previous Option

if (selectedOption == optHowToPlay) {
    choiceBox.y = 475;
}


if (selectedOption != opt1P) {
    choiceBox.y -= 43;
    selectedOption -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for start button

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for start button

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
