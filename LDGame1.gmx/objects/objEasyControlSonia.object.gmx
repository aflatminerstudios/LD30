<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objControl</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

//scrCreateGlobals();

randomize();

//For spawning souls
alarm[0] = 1 * room_speed;

//For spawning powerups
alarm[1] = 1 * room_speed;

spawnY = 532;

//Spawn 5 people
for (var i = 0; i &lt; 4; ++i) {
    var xCoord = irandom(1024);
    var person = instance_create(xCoord, spawnY, objPerson);
    person.alarm[0] = irandom(minLife) * room_speed;
}

//Music
var snd = audio_play_sound_on(musicEmit,sndMusic,true,100);
audio_sound_gain(snd, 0.3, 0);



//audio_sound_gain(snd, 0, 0); // Set sound to zero
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Game
room_goto(rmGameOver);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn powerups

var r = random(1);

if (r &lt; 0.06) {
    var xCoord = irandom(1000) + 12;
    var yCoord = irandom(576) + 12;
    
    var which = choose(objSpeedup, objDblPoints, objTime, 
      objFreeze, objIncGood, objIncEvil, objIncRight, objGoodUp, objEvilDown);    

    var powerup = instance_create(xCoord, yCoord, which);
    
    powerup.alarm[3] = 10 * room_speed;

}

alarm[1] = 1 * room_speed;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn people

if (instance_number(objPerson) &lt; maxPeople) {
    xCoord = irandom(1024);
    
    instance_create(xCoord, spawnY, objPerson);
}

alarm[0] = 1 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw score

draw_set_color(c_navy);
draw_set_halign(fa_right);


if (!isVersus) {
    draw_text(960, 0, string(score));
    
    draw_set_halign(fa_left);
}

if (isVersus) {

    draw_set_color(c_red);
    with (objDevil) {
        draw_text(960, 0, "Sonia: " + string(myScore));
    }
    
    draw_set_color(c_navy);
    draw_set_halign(fa_left);
    
    with (objAngel) {
        draw_text(64, 0, "Cheryl: " + string(myScore));    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
