<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPerson</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

//Set a 5% chance to live at first alarm
chanceToLive = 50;
curTime = minLife;

targetY = y;
targetX = -32 + irandom(1056);

if ((x - targetX) &gt; 0) {
    image_xscale = -1;
} else {
    image_xscale = 1;
}

alarm[0] = minLife * room_speed;

alarm[1] = maxLife * room_speed;

frozen = false;
oldAlarm = maxLife;



if (instance_number(objPerson) &lt; maxPeople * 0.75) {
    alarm[2] = (minLife + irandom(maxLife * 4)) * room_speed;
} else {
    alarm[2] = (minLife + irandom(maxLife * 8)) * room_speed;
}

image_speed = 20 / room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn soul and destroy instance

scrSpawnSoul(self);

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play sound and add speech bubble

var whichSoundM = choose(sndChatter1, sndChatter2, 
  sndChatter3, sndChatter4, sndChatter5, sndChatter6,
  sndChatter7, sndChatter8, sndChatter9, sndChatter10);

var whichSoundF = choose(sndChatterF1, sndChatterF2, 
  sndChatterF3, sndChatterF4, sndChatterF5, sndChatterF6,
  sndChatterF7, sndChatterF8, sndChatterF9, sndChatterF10);

var whichSound = choose(whichSoundM, whichSoundF);  
    
var sound = audio_play_sound_on(sfxEmit, whichSound, false, 50);

var bubble = instance_create(x, y - 16, objSpeech);


with (bubble) {
    connected = other.id;
    alarm[0] = audio_sound_length(sound) * room_speed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill at 100% if this alarm is reached

scrKillPerson(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Test for death

if (!frozen) {
    var r = irandom(1000);
    if (r &lt; chanceToLive) {
        scrKillPerson(self);
        alarm[1] = -1;
    } else {
        var newTime = random(1);
        curTime += newTime;
        if (curTime &lt;= halfLife) {
            chanceToLive = ((curTime - minLife)/(halfLife - minLife)) * 500;
        } else if (curTime &lt;= quarterLife) {
            chanceToLive = ((curTime - minLife)/(quarterLife - minLife)) * 750;
        } else {
            chanceToLive = ((curTime - minLife)/(maxLife - minLife)) * 1000;
        }
        
        alarm[0] = newTime * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move or set new target

if ((point_distance(x, y, targetX, targetY) &gt; personSpeed) &amp;&amp; sprite_index == sprPerson)
{
   move_towards_point(targetX, targetY, personSpeed);   
} else if (sprite_index == sprPerson){
    targetX = -32 + irandom(1056);
    if ((x - targetX) &gt; 0) {
        image_xscale = -1;
    } else {
        image_xscale = 1;
    }
} else {
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
